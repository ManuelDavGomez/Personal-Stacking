{
  "packageManagers": [
    {
      "name": "Npm",
      "description": "Gestor de paquetes para Node.js",
      "icons": ["https://svgl.app/library/npm.svg"],
      "commands": ["https://nodejs.org"]
    },
    {
      "name": "Composer",
      "description": "Gestor de paquetes para PHP",
      "icons": ["https://getcomposer.org/img/logo-composer-transparent.png"],
      "commands": ["https://getcomposer.org/download/"]
    },
    {
      "name": "Pip",
      "description": "Gestor de paquetes para Python",
      "icons": [
        "https://raw.githubusercontent.com/github/explore/666de02829613e0244e9441b114edb85781e972c/topics/pip/pip.png"
      ],
      "commands": ["https://www.python.org/downloads/"]
    },
    {
      "name": "Gem",
      "description": "Gestor de paquetes para Ruby",
      "icons": ["https://avatars.githubusercontent.com/u/208761?s=48&v=4"],
      "commands": ["https://rubyinstaller.org/"]
    },
    {
      "name": "Dotnet",
      "description": "CLI y SDK oficial para .NET y C#",
      "icons": ["https://avatars.githubusercontent.com/u/27453006?s=48&v=4"],
      "commands": ["https://dotnet.microsoft.com/download"]
    },
    {
      "name": "Go",
      "description": "Lenguaje de programación Go (Golang)",
      "icons": [
        "https://raw.githubusercontent.com/github/explore/ac0b33cc8936c152bc0dacf91436f8099a5413c9/topics/go/go.png"
      ],
      "commands": ["https://go.dev/dl/"]
    },
    {
      "name": "Java (OpenJDK)",
      "description": "Kit de desarrollo oficial de Java (JDK)",
      "icons": ["https://svgl.app/library/java.svg"],
      "commands": ["https://openjdk.org/install/"]
    },
    {
      "name": "Apache Maven",
      "description": "Gestor de dependencias y construcción para Java",
      "icons": ["https://avatars.githubusercontent.com/u/47359?s=48&v=4"],
      "commands": ["https://maven.apache.org/download.cgi"]
    },
    {
      "name": "Rust",
      "description": "Lenguaje de programación Rust y su instalador oficial",
      "icons": ["https://avatars.githubusercontent.com/u/5430905?s=48&v=4"],
      "commands": [
        "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh"
      ]
    }
  ],
  "stacks": [
    {
      "name": "NTT",
      "description": "Next.js con TailwindCSS y TypeScript usando el App Router",
      "icons": [
        "https://svgl.app/library/nextjs_icon_dark.svg",
        "https://svgl.app/library/tailwindcss.svg",
        "https://svgl.app/library/typescript.svg"
      ],
      "commands": [
        "npx create-next-app@latest my-next-app --ts --eslint --app --tailwind",
        "cd my-next-app"
      ],
      "database": "None",
      "ecosystem": "React",
      "category": "Frontend",
      "technology": ["Next.js", "TailwindCSS", "TypeScript"],
      "isNew": true
    },
    {
      "name": "RTT",
      "description": "React con Vite, TailwindCSS y TypeScript",
      "icons": [
        "https://svgl.app/library/react_dark.svg",
        "https://svgl.app/library/tailwindcss.svg",
        "https://svgl.app/library/typescript.svg"
      ],
      "commands": [
        "npm create vite@latest my-react-vite -- --template react-ts",
        "cd my-react-vite",
        "npm install",
        "npm install -D tailwindcss postcss autoprefixer",
        "npx tailwindcss init -p"
      ],
      "database": "None",
      "ecosystem": "React",
      "category": "Frontend",
      "technology": ["React", "TailwindCSS", "TypeScript"],
      "isNew": false
    },
    {
      "name": "MERN",
      "description": "MongoDB + Express + React + Node.js",
      "icons": [
        "https://svgl.app/library/mongodb.svg",
        "https://svgl.app/library/expressjs_dark.svg",
        "https://svgl.app/library/react_dark.svg",
        "https://svgl.app/library/nodejs.svg"
      ],
      "commands": [
        "npm create vite@latest my-app --template react",
        "cd my-app",
        "npm install express mongoose cors dotenv",
        "npm install --save-dev nodemon"
      ],
      "database": "MongoDB",
      "ecosystem": "React",
      "category": "fullstack",
      "technology": ["React", "Express", "MongoDB", "Node.js"],
      "isNew": false
    },
    {
      "name": "NPP",
      "description": "Next.js con Prisma ORM y PostgreSQL",
      "icons": [
        "https://svgl.app/library/nextjs_icon_dark.svg",
        "https://svgl.app/library/prisma_dark.svg",
        "https://svgl.app/library/postgresql.svg"
      ],
      "commands": [
        "npx create-next-app@latest my-next-prisma --ts --eslint",
        "cd my-next-prisma",
        "npm install prisma @prisma/client",
        "npx prisma init"
      ],
      "database": "PostgreSQL",
      "ecosystem": "React",
      "category": "fullstack",
      "technology": ["Next.js", "Prisma", "PostgreSQL"],
      "isNew": false
    },
    {
      "name": "RRT",
      "description": "Create React App con Redux Toolkit y TypeScript",
      "icons": [
        "https://svgl.app/library/react_dark.svg",
        "https://svgl.app/library/redux.svg",
        "https://svgl.app/library/typescript.svg"
      ],
      "commands": [
        "npx create-react-app my-react-redux --template redux-typescript",
        "cd my-react-redux",
        "npm install"
      ],
      "database": "None",
      "ecosystem": "React",
      "category": "Frontend",
      "technology": ["React", "Redux Toolkit", "TypeScript"],
      "isNew": false
    },
    {
      "name": "VVT",
      "description": "Vue 3 con Vuex y TailwindCSS usando Vite",
      "icons": [
        "https://svgl.app/library/vue.svg",
        "https://user-images.githubusercontent.com/7110136/29002857-9e802f08-7ab4-11e7-9c31-604b5d0d0c19.png",
        "https://svgl.app/library/tailwindcss.svg"
      ],
      "commands": [
        "npm create vite@latest my-vue-app -- --template vue",
        "cd my-vue-app",
        "npm install",
        "npm install vuex@next",
        "npm install -D tailwindcss postcss autoprefixer",
        "npx tailwindcss init -p"
      ],
      "database": "None",
      "ecosystem": "Vue",
      "category": "frontend",
      "technology": ["Vue", "Vuex", "TailwindCSS"],
      "isNew": false
    },
    {
      "name": "NTP",
      "description": "Nuxt 3 con TailwindCSS y Pinia como store",
      "icons": [
        "https://svgl.app/library/nuxt.svg",
        "https://svgl.app/library/tailwindcss.svg",
        "https://svgl.app/library/pinia.svg"
      ],
      "commands": [
        "npx nuxi init my-nuxt-app",
        "cd my-nuxt-app",
        "npm install",
        "npm install -D tailwindcss postcss autoprefixer",
        "npx tailwindcss init -p",
        "npm install pinia"
      ],
      "database": "None",
      "ecosystem": "Vue",
      "category": "frontend",
      "technology": ["Nuxt.js", "TailwindCSS", "Pinia"],
      "isNew": false
    },
    {
      "name": "STT",
      "description": "SvelteKit con TailwindCSS y TypeScript",
      "icons": [
        "https://svgl.app/library/svelte.svg",
        "https://svgl.app/library/tailwindcss.svg",
        "https://svgl.app/library/typescript.svg"
      ],
      "commands": [
        "npm create svelte@latest my-sveltekit-app",
        "cd my-sveltekit-app",
        "npm install",
        "npm install -D tailwindcss postcss autoprefixer",
        "npx tailwindcss init -p"
      ],
      "database": "None",
      "ecosystem": "Svelte",
      "category": "frontend",
      "technology": ["Svelte", "TailwindCSS", "TypeScript"],
      "isNew": false
    },
    {
      "name": "AN",
      "description": "Angular con NgRx para manejo de estado",
      "icons": [
        "https://svgl.app/library/angular.svg",
        "https://v7.ngrx.io/assets/images/badge.svg"
      ],
      "commands": [
        "npm install -g @angular/cli",
        "ng new my-angular-app --routing --style=css",
        "cd my-angular-app",
        "ng add @ngrx/store"
      ],
      "database": "None",
      "ecosystem": "Angular",
      "category": "frontend",
      "technology": ["Angular", "NgRx"],
      "isNew": false
    },
    {
      "name": "ST",
      "description": "SolidJS usando Vite y TypeScript",
      "icons": [
        "https://svgl.app/library/solidjs.svg",
        "https://svgl.app/library/typescript.svg"
      ],
      "commands": [
        "npm create vite@latest my-solid-app -- --template solid",
        "cd my-solid-app",
        "npm install"
      ],
      "database": "None",
      "ecosystem": "Solid",
      "category": "frontend",
      "technology": ["SolidJS", "Vite", "TypeScript"],
      "isNew": false
    },
    {
      "name": "RPP",
      "description": "Remix con PostgreSQL y Prisma ORM",
      "icons": [
        "https://svgl.app/library/remix_dark.svg",
        "https://svgl.app/library/postgresql.svg",
        "https://svgl.app/library/prisma_dark.svg"
      ],
      "commands": [
        "npx create-remix@latest my-remix-app",
        "cd my-remix-app",
        "npm install",
        "npm install prisma @prisma/client",
        "npx prisma init"
      ],
      "database": "PostgreSQL",
      "ecosystem": "React",
      "category": "fullstack",
      "technology": ["Remix", "PostgreSQL", "Prisma"],
      "isNew": false
    },
    {
      "name": "ETTP",
      "description": "Express con TypeScript y TypeORM conectado a PostgreSQL",
      "icons": [
        "https://svgl.app/library/expressjs_dark.svg",
        "https://svgl.app/library/typescript.svg",
        "https://svgl.app/library/typeorm.svg",
        "https://svgl.app/library/postgresql.svg"
      ],
      "commands": [
        "mkdir my-express-ts",
        "cd my-express-ts",
        "npm init -y",
        "npm install express reflect-metadata typeorm pg",
        "npm install -D typescript ts-node-dev @types/express",
        "npx tsc --init"
      ],
      "database": "PostgreSQL",
      "ecosystem": "Node.js",
      "category": "backend",
      "technology": ["Express", "TypeScript", "TypeORM"],
      "isNew": false
    },
    {
      "name": "FTPS",
      "description": "Fastify con TypeScript y Prisma usando SQLite",
      "icons": [
        "https://svgl.app/library/fastify_dark.svg",
        "https://svgl.app/library/typescript.svg",
        "https://svgl.app/library/prisma_dark.svg",
        "https://svgl.app/library/sqlite.svg"
      ],
      "commands": [
        "mkdir my-fastify",
        "cd my-fastify",
        "npm init -y",
        "npm install fastify @fastify/static prisma @prisma/client",
        "npm install -D typescript ts-node-dev",
        "npx prisma init --datasource-provider sqlite",
        "npx tsc --init"
      ],
      "database": "SQLite",
      "ecosystem": "Node.js",
      "category": "backend",
      "technology": ["Fastify", "TypeScript", "Prisma"],
      "isNew": false
    },
    {
      "name": "KMM",
      "description": "Koa con MongoDB y Mongoose",
      "icons": [
        "https://raw.githubusercontent.com/github/explore/087f23463641d25ee971402fa26e3dfb2855edb9/topics/koa/koa.png",
        "https://avatars.githubusercontent.com/u/45120?s=280&v=4",
        "https://avatars.githubusercontent.com/u/7552965?s=280&v=4"
      ],
      "commands": [
        "mkdir my-koa-app",
        "cd my-koa-app",
        "npm init -y",
        "npm install koa koa-router mongoose dotenv",
        "npm install -D nodemon"
      ],
      "database": "MongoDB",
      "ecosystem": "Node.js",
      "category": "backend",
      "technology": ["Koa", "MongoDB", "Mongoose"],
      "isNew": false
    },
    {
      "name": "NTP",
      "description": "NestJS con TypeORM y PostgreSQL",
      "icons": [
        "https://svgl.app/library/nestjs.svg",
        "https://svgl.app/library/typeorm.svg",
        "https://svgl.app/library/postgresql.svg"
      ],
      "commands": [
        "npm i -g @nestjs/cli",
        "nest new my-nest-app",
        "cd my-nest-app",
        "npm install typeorm pg",
        "npm install --save @nestjs/typeorm"
      ],
      "database": "PostgreSQL",
      "ecosystem": "Node.js",
      "category": "backend",
      "technology": ["NestJS", "TypeORM", "PostgreSQL"],
      "isNew": false
    },
    {
      "name": "AdonisJS",
      "description": "Framework AdonisJS en TypeScript para Node.js",
      "icons": ["https://avatars.githubusercontent.com/u/13810373?s=200&v=4"],
      "commands": [
        "npm init adonis-ts-app@latest my-adonis-app",
        "cd my-adonis-app",
        "npm install"
      ],
      "database": "None",
      "ecosystem": "Node.js",
      "category": "backend",
      "technology": ["AdonisJS", "TypeScript"],
      "isNew": false
    },
    {
      "name": "LM",
      "description": "Laravel con base de datos MySQL",
      "icons": [
        "https://svgl.app/library/laravel.svg",
        "https://svgl.app/library/mysql.svg"
      ],
      "commands": [
        "composer create-project --prefer-dist laravel/laravel my-laravel-app",
        "cd my-laravel-app",
        "php artisan serve"
      ],
      "database": "MySQL",
      "ecosystem": "PHP",
      "category": "fullstack",
      "technology": ["Laravel", "MySQL"],
      "isNew": false
    },
    {
      "name": "DP",
      "description": "Django con base de datos PostgreSQL",
      "icons": [
        "https://svgl.app/library/django.svg",
        "https://svgl.app/library/postgresql.svg"
      ],
      "commands": [
        "python -m venv venv",
        "venv\\Scripts\\activate",
        "pip install django psycopg2-binary",
        "django-admin startproject mydjango",
        "cd mydjango"
      ],
      "database": "PostgreSQL",
      "ecosystem": "Python",
      "category": "fullstack",
      "technology": ["Django", "PostgreSQL"],
      "isNew": false
    },
    {
      "name": "FSP",
      "description": "Flask con SQLAlchemy y PostgreSQL",
      "icons": [
        "https://svgl.app/library/flask-dark.svg",
        "https://avatars.githubusercontent.com/u/6043126?s=200&v=4",
        "https://svgl.app/library/postgresql.svg"
      ],
      "commands": [
        "python -m venv venv",
        "venv\\Scripts\\activate",
        "pip install flask sqlalchemy psycopg2-binary",
        "mkdir myflask",
        "cd myflask",
        "echo.>app.py"
      ],
      "database": "PostgreSQL",
      "ecosystem": "Python",
      "category": "backend",
      "technology": ["Flask", "SQLAlchemy", "PostgreSQL"],
      "isNew": false
    },
    {
      "name": "RP",
      "description": "Ruby on Rails con base de datos PostgreSQL",
      "icons": [
        "https://svgl.app/library/ruby.svg",
        "https://svgl.app/library/postgresql.svg"
      ],
      "commands": [
        "gem install rails",
        "rails new my-rails-app -d postgresql",
        "cd my-rails-app",
        "rails db:create"
      ],
      "database": "PostgreSQL",
      "ecosystem": "Ruby",
      "category": "fullstack",
      "technology": ["Ruby on Rails", "PostgreSQL"],
      "isNew": false
    },
    {
      "name": "ASP.NET API",
      "description": "API con ASP.NET Core",
      "icons": [
        "https://static.gunnarpeipman.com/wp-content/uploads/2020/09/aspnet-featured.png"
      ],
      "commands": [
        "dotnet new webapi -o my-dotnet-api",
        "cd my-dotnet-api",
        "dotnet restore"
      ],
      "database": "None",
      "ecosystem": ".NET",
      "category": "backend",
      "technology": ["ASP.NET Core"],
      "isNew": false
    },
     {
    "name": "MEAN",
    "description": "Stack con Angular en lugar de React",
    "icons": [
      "https://svgl.app/library/mongodb.svg",
      "https://svgl.app/library/expressjs_dark.svg",
      "https://svgl.app/library/angular.svg",
      "https://svgl.app/library/nodejs.svg"
    ],
    "commands": [
      "ng new my-app",
      "cd my-app",
      "npm install express mongoose cors",
      "npm start"
    ],
    "database": "MongoDB",
    "ecosystem": "JavaScript",
    "category": "fullstack",
    "technology": ["MongoDB", "Express", "Angular", "Node.js"],
    "isNew": true
  },
  {
    "name": "MEVN",
    "description": "Stack con Vue.js en lugar de React",
    "icons": [
      "https://svgl.app/library/mongodb.svg",
      "https://svgl.app/library/expressjs_dark.svg",
      "https://svgl.app/library/vue.svg",
      "https://svgl.app/library/nodejs.svg"
    ],
    "commands": [
      "npm init vue@latest",
      "cd my-app",
      "npm install express mongoose cors",
      "npm run dev"
    ],
    "database": "MongoDB",
    "ecosystem": "JavaScript",
    "category": "fullstack",
    "technology": ["MongoDB", "Express", "Vue.js", "Node.js"],
    "isNew": true
  },
  {
    "name": "LAMP",
    "description": "Clásico stack Linux, Apache, MySQL y PHP",
    "icons": [
      "https://svgl.app/library/linux.svg",
      "https://avatars.githubusercontent.com/u/47359?s=200&v=4",
      "https://svgl.app/library/mysql.svg",
      "https://svgl.app/library/php_dark.svg"
    ],
    "commands": [
      "sudo apt update",
      "sudo apt install apache2 mysql-server php libapache2-mod-php"
    ],
    "database": "MySQL",
    "ecosystem": "PHP",
    "category": "backend",
    "technology": ["Linux", "Apache", "MySQL", "PHP"],
    "isNew": true
  },
  {
    "name": "LEMP",
    "description": "Variante del LAMP con Nginx",
    "icons": [
      "https://svgl.app/library/linux.svg",
      "https://avatars.githubusercontent.com/u/1412239?s=48&v=4",
      "https://svgl.app/library/mysql.svg",
      "https://svgl.app/library/php_dark.svg"
    ],
    "commands": [
      "sudo apt update",
      "sudo apt install nginx mysql-server php-fpm"
    ],
    "database": "MySQL",
    "ecosystem": "PHP",
    "category": "backend",
    "technology": ["Linux", "Nginx", "MySQL", "PHP"],
    "isNew": true
  },
  {
    "name": "JAMstack",
    "description": "Arquitectura moderna con JavaScript, APIs y Markup",
    "icons": [
      "https://svgl.app/library/javascript.svg",
      "https://avatars.githubusercontent.com/u/51121562?s=48&v=4",
      "https://svgl.app/library/html5.svg"
    ],
    "commands": [
      "npm init astro",
      "npm run dev"
    ],
    "database": "Headless CMS",
    "ecosystem": "Web",
    "category": "frontend",
    "technology": ["JavaScript", "APIs", "Markup"],
    "isNew": true
  },
  {
    "name": "Django",
    "description": "Framework de Python para desarrollo web",
    "icons": [
      "https://svgl.app/library/python.svg",
      "https://svgl.app/library/django.svg",
      "https://svgl.app/library/postgresql.svg"
    ],
    "commands": [
      "pip install django",
      "django-admin startproject mysite"
    ],
    "database": "PostgreSQL",
    "ecosystem": "Python",
    "category": "backend",
    "technology": ["Python", "Django", "PostgreSQL"],
    "isNew": true
  },
  {
    "name": "Next.js Full Stack",
    "description": "Stack moderno con SSR usando Next.js",
    "icons": [
      "https://svgl.app/library/nextjs_icon_dark.svg",
      "https://svgl.app/library/prisma_dark.svg",
      "https://svgl.app/library/postgresql.svg"
    ],
    "commands": [
      "npx create-next-app@latest my-app",
      "cd my-app",
      "npm install @prisma/client",
      "npx prisma init"
    ],
    "database": "PostgreSQL",
    "ecosystem": "React",
    "category": "fullstack",
    "technology": ["Next.js", "Prisma", "PostgreSQL"],
    "isNew": true
  },
  {
    "name": "Astro Full Stack",
    "description": "Stack ligero para sitios rápidos con Astro",
    "icons": [
      "https://svgl.app/library/astro_dark.svg",
      "https://svgl.app/library/tailwindcss.svg",
      "https://svgl.app/library/supabase.svg"
    ],
    "commands": [
      "npm create astro@latest",
      "cd my-app",
      "npm install @supabase/supabase-js"
    ],
    "database": "Supabase",
    "ecosystem": "JavaScript",
    "category": "frontend",
    "technology": ["Astro", "TailwindCSS", "Supabase"],
    "isNew": true
  }
  ]
}
